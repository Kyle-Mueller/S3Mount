<Application x:Class="S3Mount.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:S3Mount"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:converters="clr-namespace:S3Mount.Converters"
             Startup="Application_Startup">
    <Application.Resources>
        <!-- Color Palette -->
        <Color x:Key="PrimaryBackground">#0F1419</Color>
        <Color x:Key="SecondaryBackground">#1A1F2E</Color>
        <Color x:Key="TertiaryBackground">#252D3A</Color>
        <Color x:Key="SurfaceColor">#2C3544</Color>
        <Color x:Key="BorderColor">#3D4656</Color>
        
        <Color x:Key="PrimaryText">#F3F4F6</Color>
        <Color x:Key="SecondaryText">#9CA3AF</Color>
        <Color x:Key="TertiaryText">#6B7280</Color>
        
        <Color x:Key="AccentOrange">#F6821F</Color>
        <Color x:Key="AccentBlue">#3B82F6</Color>
        <Color x:Key="SuccessGreen">#10B981</Color>
        <Color x:Key="ErrorRed">#EF4444</Color>
        <Color x:Key="WarningYellow">#F59E0B</Color>
        
        <!-- Brushes -->
        <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="{StaticResource PrimaryBackground}"/>
        <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource SecondaryBackground}"/>
        <SolidColorBrush x:Key="TertiaryBackgroundBrush" Color="{StaticResource TertiaryBackground}"/>
        <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
        <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
        
        <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource PrimaryText}"/>
        <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource SecondaryText}"/>
        <SolidColorBrush x:Key="TertiaryTextBrush" Color="{StaticResource TertiaryText}"/>
        
        <SolidColorBrush x:Key="AccentOrangeBrush" Color="{StaticResource AccentOrange}"/>
        <SolidColorBrush x:Key="AccentBlueBrush" Color="{StaticResource AccentBlue}"/>
        <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessGreen}"/>
        <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorRed}"/>
        <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningYellow}"/>
        
        <!-- Converters -->
        <converters:StatusColorConverter x:Key="StatusColorConverter"/>
        <converters:StatusTextConverter x:Key="StatusTextConverter"/>
        <converters:MountButtonTextConverter x:Key="MountButtonTextConverter"/>
        <converters:MountButtonColorConverter x:Key="MountButtonColorConverter"/>
        <converters:ActiveMountsCountConverter x:Key="ActiveMountsCountConverter"/>
        <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
        <converters:StringNotEmptyToVisibilityConverter x:Key="StringNotEmptyToVisConverter"/>
        <converters:CountToVisibilityConverter x:Key="CountToVisConverter"/>
        <converters:InverseCountToVisibilityConverter x:Key="InverseCountToVisibilityConverter"/>
        <converters:YesNoConverter x:Key="YesNoConverter"/>
        
        <!-- Base Styles -->
        <Style TargetType="Window">
            <Setter Property="Background" Value="{StaticResource PrimaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="FontFamily" Value="Segoe UI, Arial"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        </Style>
        
        <!-- Custom Window Style with Dark Title Bar -->
        <Style x:Key="DarkWindowStyle" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource PrimaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="FontFamily" Value="Segoe UI, Arial"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
            <Setter Property="AllowsTransparency" Value="False"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="32"
                                 ResizeBorderThickness="5"
                                 GlassFrameThickness="0"
                                 CornerRadius="0"
                                 UseAeroCaptionButtons="True"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        </Style>
        
        <!-- Modern Button Style -->
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource TertiaryBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Primary Button Style -->
        <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="{StaticResource AccentOrangeBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource AccentOrangeBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern TextBox Style -->
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentOrangeBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentOrangeBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="{TemplateBinding Background}"
                                               BorderBrush="{TemplateBinding BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               CornerRadius="6">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="30"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter Grid.Column="0" Margin="12,10"/>
                                                <Path Grid.Column="1" 
                                                     Data="M 0 0 L 4 4 L 8 0 Z"
                                                     Fill="{StaticResource SecondaryTextBrush}"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="BorderBrush" Value="{StaticResource AccentOrangeBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="12,10"
                                            IsHitTestVisible="False"/>
                            <Popup x:Name="Popup"
                                  Placement="Bottom"
                                  IsOpen="{TemplateBinding IsDropDownOpen}"
                                  AllowsTransparency="True"
                                  Focusable="False"
                                  PopupAnimation="Slide">
                                <Border Background="{StaticResource SecondaryBackgroundBrush}"
                                       BorderBrush="{StaticResource BorderBrush}"
                                       BorderThickness="1"
                                       CornerRadius="6"
                                       Margin="0,4,0,0"
                                       MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- ComboBoxItem Style -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}"
                               Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" Value="{StaticResource TertiaryBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern PasswordBox Style -->
        <Style TargetType="PasswordBox">
            <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentOrangeBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentOrangeBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern CheckBox Style -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="Margin" Value="0,8"/>
        </Style>
        
        <!-- Modern DataGrid Style -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="{StaticResource SecondaryBackgroundBrush}"/>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource TertiaryBackgroundBrush}"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="RowHeight" Value="50"/>
        </Style>
        
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource TertiaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>
        
        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource TertiaryBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Modern Expander Style -->
        <Style TargetType="Expander">
            <Setter Property="Background" Value="{StaticResource TertiaryBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="6">
                            <DockPanel>
                                <ToggleButton x:Name="ExpanderButton"
                                            DockPanel.Dock="Top"
                                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                            Background="{TemplateBinding Background}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Padding="12,10">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Background="{TemplateBinding Background}"
                                                   Padding="{TemplateBinding Padding}"
                                                   CornerRadius="6,6,0,0">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Path x:Name="Arrow"
                                                         Grid.Column="0"
                                                         Data="M 0 0 L 4 4 L 0 8 Z"
                                                         Fill="{TemplateBinding Foreground}"
                                                         VerticalAlignment="Center"
                                                         Margin="0,0,8,0"
                                                         RenderTransformOrigin="0.5,0.5">
                                                        <Path.RenderTransform>
                                                            <RotateTransform Angle="0"/>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                    <ContentPresenter Grid.Column="1"
                                                                    Content="{TemplateBinding Content}"
                                                                    VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                                                               Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                                               To="90"
                                                                               Duration="0:0:0.2"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                                                               Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                                               To="0"
                                                                               Duration="0:0:0.2"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <ContentPresenter x:Name="Content"
                                                DockPanel.Dock="Bottom"
                                                Visibility="Collapsed"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="Content" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- System Tray Icon -->
        <tb:TaskbarIcon x:Key="TrayIcon"
                       ToolTipText="S3 Mount Manager"
                       MenuActivation="RightClick"
                       TrayLeftMouseUp="TrayIcon_TrayLeftMouseUp">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu Background="{StaticResource SecondaryBackgroundBrush}"
                            BorderBrush="{StaticResource BorderBrush}"
                            Foreground="{StaticResource PrimaryTextBrush}">
                    <MenuItem Header="Show Manager" Click="ShowManager_Click" FontWeight="Bold"/>
                    <Separator/>
                    <MenuItem Header="Active Mounts" x:Name="ActiveMountsMenu"/>
                    <Separator/>
                    <MenuItem Header="Exit" Click="Exit_Click"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Application.Resources>
</Application>
